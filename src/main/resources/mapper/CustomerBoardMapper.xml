<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.faitmain.domain.customer.mapper.CustomerMapper">

	<resultMap id="customerMap" type="Customer">
		<result property="boardNumber"  				column="customer_board_number"		jdbcType="INTEGER"/>
		<result property="boardTitle"					column="customer_board_title" 		jdbcType="VARCHAR" />
		<result property="boardContent"					column="customer_board_content" 	jdbcType="VARCHAR" />
		<result property="boardRegDate"					column="reg_date"	 				jdbcType="DATE" />
		<result property="boardUpdateDate"				column="update_date" 				jdbcType="DATE" />
		<result property="FAQCategoryCode"			 	column="customer_FAQ_category_code" jdbcType="VARCHAR" />
		<result property="boardType"  					column="customer_board_type" 		jdbcType="CHAR" />
		<result property="viewCount"  					column="view_cnt" 					jdbcType="INTEGER" />
		<result property="deleteYn"  					column="delete_yn" 					jdbcType="VARCHAR" />
		<result property="image"  						column="boardImage" 				jdbcType="VARCHAR" />
		<association property="customerId" javaType="User" >	
			<id property="id" column="customer_id" jdbcType="VARCHAR"/>
		</association>
	</resultMap>
	
	<resultMap id="banStatusMap" type="com.faitmain.domain.customer.domain.BanStatus">
		<result property="reportNumber"				column="report_number" 			jdbcType="INTEGER"/>
		<result property="respondentId"				column="respondent_id"			jdbcType="VARCHAR" />
		<result property="respondentNickname"  		column="respondent_nickname"	jdbcType="VARCHAR" />
		<result property="respondentStoreName" 		column="respondent_store_name" 	jdbcType="VARCHAR" />
		<result property="statusNumber"  			column="status_number"			jdbcType="INTEGER" />
		<result property="periodNumber"  			column="ban_period_number" 		jdbcType="INTEGER" />
		<result property="endDate"					column="ban_end_date" 			jdbcType="DATE" />
		
		<association property="customerId" javaType="com.faitmain.domain.user.domain.User" >	
			<id property="id" column="customer_id" jdbcType="VARCHAR"/>
			<result property="respondentNickname" column="respondent_nickname" jdbcType="VARCHAR"/>
			<result property="respondentStoreName" column="respondent_store_name" jdbcType="VARCHAR"/>
		</association>
		
	</resultMap>
	
	<resultMap id="imageSelectMap" type="com.faitmain.global.common.Image">
		<result property="imageNumber" column="image_number" jdbcType="INTEGER"/>
		<result property="imageClassificationCode" column="image_classification_code" jdbcType="CHAR"/>
		<result property="imageClassificationNumber" column="image_classification_number" jdbcType="INTEGER"/>
		<result property="imageName" column="image_name" jdbcType="VARCHAR"/>
	</resultMap>
	
<!-- ============================================================================= -->	
	<select id="customerCount" resultType ="int">
 		SELECT COUNT(customer_board_number) cnt FROM customer
 	</select>  
	
	 <select id="getCustomerBoard" parameterType="int" resultType="Customer" resultMap ="customerMap">

    	SELECT 
    	customer_board_number, customer_board_title, customer_board_content, view_cnt, 
		delete_yn, reg_date, update_date, customer_FAQ_category_code, customer_board_type, customer_id
    	FROM customer 
    	<where>
			delete_yn = 'N' AND customer_board_number = #{boardNumber}
      	</where>    			  	
    </select>
    
    <select id="getLiveGuide" parameterType="String" resultType="Customer" resultMap ="customerMap">

    	SELECT 
    	customer_board_number, customer_board_title, customer_board_content, view_cnt, 
		delete_yn, reg_date, update_date, customer_FAQ_category_code, customer_board_type, customer_id
    	FROM customer 
    	<where>
			delete_yn = 'N' AND customer_board_type = #{boardType}
      	</where>    	
      		ORDER BY reg_date	
      		DESC LIMIT 1	  	
    </select>
	
	<insert id="addCustomerBoard" parameterType="Customer" >
		    INSERT INTO customer
		    ( customer_board_title, customer_board_content, 
		     delete_yn, reg_date, update_date, customer_FAQ_category_code, customer_board_type,  customer_id )
		VALUES
		    ( #{boardTitle}, #{boardContent},'N', NOW(), NULL, #{FAQCategoryCode}, #{boardType}, #{customerId.id} )    
	</insert>
	
	
	<update id="updateCustomerBoard" parameterType="Customer"  >
    	UPDATE customer
    	<set>
    		<!-- customer_board_type		= #{boardType},  -->
    		customer_board_title	= #{boardTitle},
    		customer_board_content	= #{boardContent},
    		reg_date				= NOW()
    		<!-- customer_id				= #{customerId.id} -->
    		<!-- customer_FAQ_category_code = #{FAQCategoryCode}, -->
    		<!-- image_number			= #{imageNumber}, -->
    	</set>
		<where> 
			customer_board_number = #{boardNumber}
    	</where>
    </update>
    
      <update id="deleteCustomerBoard" parameterType="int" >
    	UPDATE customer
    	<set>
    		delete_yn = 'Y'
    	</set>
    	<where>
    		customer_board_number = #{boardNumber}
    	</where>
    </update>
    
   <!--  <select id="getViewCount" parameterType="int" resultMap="customerMap">
    	SELECT hit
    	FROM customer
    	<where>
    		customer_board_number = ${boardNumber}
    	</where>
    </select> -->
    
    <!-- SQL : SELECT LIST -->
    <select id="getCustomerBoardList" parameterType="String" resultMap="customerMap" >
    
    	SELECT * 
    	FROM customer
    	<where>
    		delete_yn = 'N' AND customer_board_type = #{boardType}
    	</where> 
    	ORDER BY reg_date DESC
    	
    </select> 
    
    <select id="getFAQCategoryCode" parameterType="String" resultMap="customerMap" >
    
    	SELECT * 
    	FROM customer
    	<where>
    		delete_yn = 'N' AND customer_FAQ_category_code = #{FAQCategoryCode}
    	</where> 
    	ORDER BY reg_date DESC
    	
    </select> 
    
    <select id="getFAQList" parameterType="String" resultMap="customerMap">
	  	 SELECT *
	  	FROM (	SELECT inner_table.* , @ROWNUM := @ROWNUM+1 AS row_seq
	  					FROM		(	SELECT customer_board_number, customer_board_title, customer_board_content, reg_date, customer_FAQ_category_code 
	  										FROM customer
	  							<if test="searchCondition != null">
	  							<where>
									customer_board_number is null
										<if test="searchCondition == FAQCategoryCode and searchKeyword == '1' ">
							 				customer_FAQ_category_code = #{searchKeyword}
										</if> 
										<if test="searchCondition == FAQCategoryCode and searchKeyword == '2' ">
							 				customer_FAQ_category_code = #{searchKeyword}
										</if>										
										<if test="searchCondition == FAQCategoryCode and searchKeyword == '3' ">
							 				customer_FAQ_category_code = #{searchKeyword}
										</if>	
										<if test="searchCondition == FAQCategoryCode and searchKeyword == '4' ">
							 				customer_FAQ_category_code = #{searchKeyword}
										</if>
										<if test="searchCondition == FAQCategoryCode and searchKeyword == '5' ">
							 				customer_FAQ_category_code = #{searchKeyword}
										</if>																		
												
								</where>
								</if>
								ORDER BY reg_date ) inner_table
								WHERE (@ROWNUM:=0)=0 limit #{endRowNum} ) result_table
								WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
    
    
     <!-- 게시글 수  -->
    <select id="getBoardTotalCount" parameterType="Customer" resultType="int">
    
    	SELECT COUNT(*)
    	FROM customer
    	<where>
    		delete_yn = 'N'
    	</where> 
    
    </select> 
    
    
    
    
    
<!-- ============================================================================= -->	
	<!-- SQL : INSERT -->
	
   <!--  <insert id="addCustomerBoardImage" parameterType="com.faitmain.global.common.Image" >
    	INSERT
    	INTO image(image_classification_code, image_classification_number, image_name)
    	VALUES('C', #{boardNumber}, #{boardImage})
    </insert> -->
    
    <!-- <insert id="updateBanStatus" parameterType="BanStatus">
    	INSERT INTO ban_period
		    ( respondent_id, respondent_nickname, respondent_store_name, status_number, ban_period_number, ban_end_date )
		VALUES
		    ( #{respondentId}, #{respondentNickname}, #{respondentStoreName}, #{statusNumber}, #{periodNumber}, #{endDate} )
    
    </insert> -->
    
    <!-- 상세보기 -->

    <!-- <select id="getCustomerBoard" parameterType="int" resultMap ="customerMap">

    <select id="getCustomerBoard" parameterType="int" resultType="Customer" resultMap ="customerMap">

    	SELECT 
    	customer_board_title, customer_board_content, customer_FAQ_category_code, customer_board_type, reg_date, update_date, customer_id
    	FROM customer 
    	<where>

    		customer_board_number = #{boardNumber}
    	</where>
    		delete_yn = 'N' AND customer_board_number = #{boardNumber}
    	</where>  	
    </select>

    
   <select id="getCustomerBoardImage" parameterType="int" resultMap="customerMap">
    	SELECT *
    	FROM image
    	<where>
    		 image_classification_code = 'C' AND image_classification_number = #{value}
		</where>    
    </select> -->
    
    <!-- SQL : UPDATE -->
  <!--    <update id="updateCustomerBoard" parameterType="Customer">
    	UPDATE customer
    	<set>
    		customer_board_type		= #{boardType},
    		customer_board_title	= #{boardTitle},
    		customer_board_content	= #{boardContent},
    		update_date				= NOW(),
    		customer_FAQ_category_code = #{FAQCategoryCode},

    		customer_board_type		= #{boardType},
    		image_number			= #{imageNumber},
  		
       		customer_id				= #{customerId.id}
    	</set>
		<where> 
			customer_board_number = #{boardNumber}
    	</where>
    </update> -->
    
   <!--  <update id="updateCustomerBoardImage" parameterType="com.faitmain.global.common.Image">
    	UPDATE image
    	<set>
    		image_name = #{imageName}
    	</set>
    	<where>
    		image_number = #{imageNumber}
    	</where>
    </update> -->
    
   	<!-- <update id="updateBanStatus" parameterType="BanStatus">
   		UPDATE ban_period
   		<set>
   			status_number = #{statusNumber}
   			period_number = #{periodNumber}
   		</set>
   		<where>
   			report_number = #{reportNumber}
   		</where> 
   	</update>-->    

   <!--  <delete id="deleteCustomerBoard" parameterType="Customer">
    	DELETE FROM customer
    	<where>
    		customer_board_number = #{boardNumber}
    	</where>
    </delete> -->
    
   <!--  <delete id="deleteCustomerBoardImage" parameterType="int">
    	DELETE FROM image
    	<where>
    		image_number = #{imageNumber}
    	</where>
    </delete> -->
     

	<!-- <select  id="getCustomerBoardList"  parameterType="map"	resultMap="customerMap">

   							
  		SELECT c1.* 
   		FROM (SELECT @ROWNUM:=@ROWNUM+1 AS row_num, 

   			c.* FROM customer AS c,(SELECT @ROWNUM:=0) AS r ORDER BY reg_date DESC) AS c1 
				WHERE row_num &gt; #{startRowNum} AND row_num &lt;= #{endRowNum};  -->
		<!-- 		SELECT c1.* 
   		FROM (SELECT @ROWNUM:=@ROWNUM+1 AS row_num, 
   			c.* FROM customer AS c,(SELECT @ROWNUM:=0) AS r ORDER BY reg_date DESC) AS c1 
				WHERE row_num &gt; #{start} AND row_num &lt; #{end};  -->

   		<!-- 	n.* FROM customer AS c,(SELECT @ROWNUM:=0) AS c ORDER BY reg_date DESC) AS c1 
				WHERE row_num &gt; #{startRowNum} AND row_num &lt;= #{endRowNum};  -->

	<!-- 
	SQL : SELECT ROW Count	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT prod_no , prod_name , price
						FROM product
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			prod_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			prod_name = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
      -->
  
	


 	
</mapper>